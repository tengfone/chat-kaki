// Prisma is a ORM (object relational mapping -> Convert SQL queries using language in this case TS)
// npx prisma generate => add to local prisma so we can work with it  
// npx prisma db push => add to planetscale (serverless SQL)

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"] // enable searching for Kakis
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id   String @id @default(uuid())
  name String
  Kaki Kaki[] // Relational
}

model Kaki {
  id           String @id @default(uuid())
  userId       String
  userName     String
  src          String
  description  String
  name         String @db.Text // Enable longer char, makes it searchable 
  instructions String @db.Text // Minimum 200 char
  seed         String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  @@index([categoryId]) // Remove category warning (line 34)
  @@fulltext([name]) // enable search on name
}
